From 9dd0b978690f02d0567745865d8682e95fa135fe Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Mon, 13 Aug 2012 21:32:45 +0200
Subject: [PATCH 145/285] MediaMonitor: Make list of registered extensions
 static instead of instance

If a MediaMonitor drive is hot plugged then a new instance is created.
Currently the list of registered file extensions is per instance so the
media type is never detected.

This patch makes the list of registered file extensions static.

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
---
 mythtv/libs/libmyth/mythhdd.cpp   |    5 ++++-
 mythtv/libs/libmyth/mythmedia.cpp |   17 ++++++++++++++---
 mythtv/libs/libmyth/mythmedia.h   |    2 +-
 3 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/mythtv/libs/libmyth/mythhdd.cpp b/mythtv/libs/libmyth/mythhdd.cpp
index 3fe63c7..20c5a2f 100644
--- a/mythtv/libs/libmyth/mythhdd.cpp
+++ b/mythtv/libs/libmyth/mythhdd.cpp
@@ -25,7 +25,7 @@ MythHDD::MythHDD(QObject *par, const char *DevicePath,
 {
     VERBOSE(VB_MEDIA, "MythHDD::MythHDD " + m_DevicePath);
     m_Status = MEDIASTAT_NOTMOUNTED;
-    m_MediaType = MEDIATYPE_DATA;       // default type is data
+    m_MediaType = MEDIATYPE_UNKNOWN;
 }
 
 /** \fn MythHDD::checkMedia(void)
@@ -41,7 +41,10 @@ MediaStatus MythHDD::checkMedia(void)
 
         // device is mounted, trigger event
         if (MEDIASTAT_MOUNTED != m_Status)
+        {
             m_Status = MEDIASTAT_NOTMOUNTED;
+            onDeviceMounted();
+        }
         return setStatus(MEDIASTAT_MOUNTED);
     }
 
diff --git a/mythtv/libs/libmyth/mythmedia.cpp b/mythtv/libs/libmyth/mythmedia.cpp
index 8da9b29..abae9d8 100644
--- a/mythtv/libs/libmyth/mythmedia.cpp
+++ b/mythtv/libs/libmyth/mythmedia.cpp
@@ -50,6 +50,8 @@ const char* MythMediaDevice::MediaErrorStrings[] =
     "MEDIAERR_UNSUPPORTED"
 };
 
+ext_to_media_t MythMediaDevice::s_ext_to_media;
+
 MythMediaDevice::MythMediaDevice(QObject* par, const char* DevicePath, 
                                  bool SuperMount,  bool AllowEject) 
                : QObject(par)
@@ -191,9 +193,18 @@ MediaType MythMediaDevice::DetectMediaType(void)
     ext_cnt_t::const_iterator it = ext_cnt.begin();
     for (; it != ext_cnt.end(); ++it)
     {
-        ext_to_media_t::const_iterator found = m_ext_to_media.find(it.key());
-        if (found != m_ext_to_media.end())
+        ext_to_media_t::const_iterator found = s_ext_to_media.find(it.key());
+        if (found != s_ext_to_media.end())
+        {
+            VERBOSE(VB_MEDIA, QString("DetectMediaType %1 (%2)")
+                .arg(MediaTypeString(found.value())).arg(it.key()));
             media_cnts[*found] += *it;
+        }
+        else
+        {
+            VERBOSE(VB_GENERAL, QString("DetectMediaType(this=0x%1) unknown file type %1")
+                .arg(quintptr(this),0,16).arg(it.key()));
+        }
     }
 
     uint mediatype = 0;
@@ -258,7 +269,7 @@ void MythMediaDevice::RegisterMediaExtensions(uint mediatype,
 {
     const QStringList list = extensions.split(",");
     for (QStringList::const_iterator it = list.begin(); it != list.end(); ++it)
-        m_ext_to_media[*it] |= mediatype;
+        s_ext_to_media[*it] |= mediatype;
 }
 
 MediaError MythMediaDevice::eject(bool open_close)
diff --git a/mythtv/libs/libmyth/mythmedia.h b/mythtv/libs/libmyth/mythmedia.h
index de3acca..d2018a3 100644
--- a/mythtv/libs/libmyth/mythmedia.h
+++ b/mythtv/libs/libmyth/mythmedia.h
@@ -165,7 +165,7 @@ class MPUBLIC MythMediaDevice : public QObject
                              ///  be private, but a subclass of a
                              ///  subclass needs it (MythCDRomLinux)
  private:
-    ext_to_media_t m_ext_to_media; ///< Map of extension to media type.
+    static ext_to_media_t s_ext_to_media; ///< Map of extension to media type.
 };
 
 #endif
-- 
1.7.9.5

