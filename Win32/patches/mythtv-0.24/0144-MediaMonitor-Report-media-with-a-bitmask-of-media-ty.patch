From 03b38abe186592474b91940fc68dffda898648a8 Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Mon, 13 Aug 2012 20:15:40 +0200
Subject: [PATCH 144/285] MediaMonitor: Report media with a bitmask of media
 types

Allow media with mixed types to be detected by MythGallery and MythMusic.
Currently, if a media has more music tracks than images then it will
not be seen by MythGallery and the pictures and/or videos can't be viewed.

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
---
 mythtv/libs/libmyth/mythmedia.cpp |   91 ++++++++++++++++++-------------------
 mythtv/libs/libmyth/mythmedia.h   |    4 +-
 2 files changed, 47 insertions(+), 48 deletions(-)

diff --git a/mythtv/libs/libmyth/mythmedia.cpp b/mythtv/libs/libmyth/mythmedia.cpp
index 698a438..8da9b29 100644
--- a/mythtv/libs/libmyth/mythmedia.cpp
+++ b/mythtv/libs/libmyth/mythmedia.cpp
@@ -176,17 +176,16 @@ bool MythMediaDevice::performMountCmd(bool DoMount)
  */
 MediaType MythMediaDevice::DetectMediaType(void)
 {
-    MediaType mediatype = MEDIATYPE_UNKNOWN;
     ext_cnt_t ext_cnt;
 
     if (!ScanMediaType(m_MountPath, ext_cnt))
     {
         VERBOSE(VB_MEDIA, QString("No files with extensions found in '%1'")
                 .arg(m_MountPath));
-        return mediatype;
+        return MEDIATYPE_UNKNOWN;
     }
 
-    QMap<uint, uint> media_cnts, media_cnt;
+    QMap<uint, uint> media_cnts;
 
     // convert raw counts to composite mediatype counts
     ext_cnt_t::const_iterator it = ext_cnt.begin();
@@ -197,29 +196,19 @@ MediaType MythMediaDevice::DetectMediaType(void)
             media_cnts[*found] += *it;
     }
 
-    // break composite mediatypes into constituent components
+    uint mediatype = 0;
+
     QMap<uint, uint>::const_iterator cit = media_cnts.begin();
     for (; cit != media_cnts.end(); ++cit)
     {
-        for (uint key = 0, j = 0; key != MEDIATYPE_END; j++)
-        {
-            if ((key = 1 << j) & cit.key())
-                media_cnt[key] += *cit;
-        }
-    }
-
-    // decide on mediatype based on which one has a handler for > # of files
-    uint max_cnt = 0;
-    for (cit = media_cnt.begin(); cit != media_cnt.end(); ++cit)
-    {
-        if (*cit > max_cnt)
+        for (uint key = 1; key != MEDIATYPE_END; key <<= 1)
         {
-            mediatype = (MediaType) cit.key();
-            max_cnt   = *cit;
+            if (key & cit.key())
+                mediatype |= key;
         }
     }
 
-    return mediatype;
+    return mediatype ? (MediaType)mediatype : MEDIATYPE_UNKNOWN;
 }
 
 /**
@@ -460,37 +449,47 @@ void MythMediaDevice::clearData()
     m_MediaType = MEDIATYPE_UNKNOWN;
 }
 
-const char* MythMediaDevice::MediaTypeString()
+QString MythMediaDevice::MediaTypeString()
 {
     return MediaTypeString(m_MediaType);
 }
 
-const char* MythMediaDevice::MediaTypeString(MediaType type)
+QString MythMediaDevice::MediaTypeString(uint type)
 {
-    // MediaType is currently a bitmask. If it is ever used as such,
-    // this code will only output the main type.
-
-    if (type == MEDIATYPE_UNKNOWN)
-        return "MEDIATYPE_UNKNOWN";
-    if (type & MEDIATYPE_DATA)
-        return "MEDIATYPE_DATA";
-    if (type & MEDIATYPE_MIXED)
-        return "MEDIATYPE_MIXED";
-    if (type & MEDIATYPE_AUDIO)
-        return "MEDIATYPE_AUDIO";
-    if (type & MEDIATYPE_DVD)
-        return "MEDIATYPE_DVD";
-    if (type & MEDIATYPE_BD)
-        return "MEDIATYPE_BD";
-    if (type & MEDIATYPE_VCD)
-        return "MEDIATYPE_VCD";
-    if (type & MEDIATYPE_MMUSIC)
-        return "MEDIATYPE_MMUSIC";
-    if (type & MEDIATYPE_MVIDEO)
-        return "MEDIATYPE_MVIDEO";
-    if (type & MEDIATYPE_MGALLERY)
-        return "MEDIATYPE_MGALLERY";
-
-    return "MEDIATYPE_UNKNOWN";
+    // MediaType is a bitmask.
+    QString mediatype;
+    for (uint u = MEDIATYPE_UNKNOWN; u != MEDIATYPE_END; u <<= 1)
+    {
+        QString s;
+        if (u & type & MEDIATYPE_UNKNOWN)
+            s = "MEDIATYPE_UNKNOWN";
+        else if (u & type & MEDIATYPE_DATA)
+            s = "MEDIATYPE_DATA";
+        else if (u & type & MEDIATYPE_MIXED)
+            s = "MEDIATYPE_MIXED";
+        else if (u & type & MEDIATYPE_AUDIO)
+            s = "MEDIATYPE_AUDIO";
+        else if (u & type & MEDIATYPE_DVD)
+            s = "MEDIATYPE_DVD";
+        else if (u & type & MEDIATYPE_BD)
+            s = "MEDIATYPE_BD";
+        else if (u & type & MEDIATYPE_VCD)
+            s = "MEDIATYPE_VCD";
+        else if (u & type & MEDIATYPE_MMUSIC)
+            s = "MEDIATYPE_MMUSIC";
+        else if (u & type & MEDIATYPE_MVIDEO)
+            s = "MEDIATYPE_MVIDEO";
+        else if (u & type & MEDIATYPE_MGALLERY)
+            s = "MEDIATYPE_MGALLERY";
+        else
+            continue;
+
+        if (mediatype.isEmpty())
+            mediatype = s;
+        else
+            mediatype += "|" + s;
+    }
+
+    return mediatype;
 };
 
diff --git a/mythtv/libs/libmyth/mythmedia.h b/mythtv/libs/libmyth/mythmedia.h
index 5169c27..de3acca 100644
--- a/mythtv/libs/libmyth/mythmedia.h
+++ b/mythtv/libs/libmyth/mythmedia.h
@@ -115,9 +115,9 @@ class MPUBLIC MythMediaDevice : public QObject
 
     void clearData();
 
-    const char* MediaTypeString();
+    QString MediaTypeString();
 
-    static const char* MediaTypeString(MediaType type);
+    static QString MediaTypeString(uint type);
 
  signals:
     void statusChanged(MediaStatus oldStatus, MythMediaDevice* pMedia);
-- 
1.7.9.5

