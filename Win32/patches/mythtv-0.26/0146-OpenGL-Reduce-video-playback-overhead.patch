From 4e86eda0959f847febf4a188749a75cc4ceedce7 Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Sat, 21 Jul 2012 18:47:35 +0200
Subject: [PATCH 146/227] OpenGL: Reduce video playback overhead

This patch introduces 2 changes to reduce video frame overhead and
hence reduce CPU load.

1. In MythRenderOpenGL::doneCurrent don't call QGLContext::doneCurrent
as it's strictly not necessary and causes the next call to makeCurrent
to take considerably longer.  Saves ~ 11mS per frame.

2. In VideoOutputOpenGL::Show only call gl_context->swapBuffers if
the current format is double buffered,  Saves ~2mS per frame.

Timings from an Intel i5 661 @ 3.33GHz using onboard graphics with
Linux 3.4 KMS.

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
---
 mythtv/libs/libmythtv/videoout_opengl.cpp   |    2 +-
 mythtv/libs/libmythui/mythrender_opengl.cpp |    4 ++++
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/mythtv/libs/libmythtv/videoout_opengl.cpp b/mythtv/libs/libmythtv/videoout_opengl.cpp
index 556fe85..04829e1 100644
--- a/mythtv/libs/libmythtv/videoout_opengl.cpp
+++ b/mythtv/libs/libmythtv/videoout_opengl.cpp
@@ -645,7 +645,7 @@ void VideoOutputOpenGL::Show(FrameScanType scan)
         return;
     }
 
-    if (gl_context)
+    if (gl_context && gl_context->format().doubleBuffer())
         gl_context->swapBuffers();
 }
 
diff --git a/mythtv/libs/libmythui/mythrender_opengl.cpp b/mythtv/libs/libmythui/mythrender_opengl.cpp
index 10a9999..67eae27 100644
--- a/mythtv/libs/libmythui/mythrender_opengl.cpp
+++ b/mythtv/libs/libmythui/mythrender_opengl.cpp
@@ -166,8 +166,12 @@ void MythRenderOpenGL::makeCurrent()
 void MythRenderOpenGL::doneCurrent()
 {
     m_lock_level--;
+    // Calling doneCurrent is strictly not necessary and causes the next call
+    // to makeCurrent to take considerably longer
+#if 0
     if (m_lock_level == 0)
         QGLContext::doneCurrent();
+#endif
     if (m_lock_level < 0)
         LOG(VB_GENERAL, LOG_ERR, LOC + "Mis-matched calls to makeCurrent()");
     m_lock->unlock();
-- 
1.7.9.5

