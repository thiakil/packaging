From 98fbc191a0ebf7fd13f4e0b771d1a55c772fab41 Mon Sep 17 00:00:00 2001
From: Lawrence Rust <lvr@softsystem.co.uk>
Date: Tue, 5 Feb 2013 15:39:26 +0000
Subject: [PATCH 116/227] mythgallery: fix some flashes in the GL cube effect

Signed-off-by: Lawrence Rust <lvr@softsystem.co.uk>
---
 .../mythgallery/mythgallery/glsingleview.cpp       |  189 ++++++++++----------
 1 file changed, 99 insertions(+), 90 deletions(-)

diff --git a/mythplugins/mythgallery/mythgallery/glsingleview.cpp b/mythplugins/mythgallery/mythgallery/glsingleview.cpp
index dd83e56..ba7d50e 100644
--- a/mythplugins/mythgallery/mythgallery/glsingleview.cpp
+++ b/mythplugins/mythgallery/mythgallery/glsingleview.cpp
@@ -1047,8 +1047,8 @@ void GLSingleView::EffectFlutter(void)
 
 void GLSingleView::EffectCube(void)
 {
-    float tot      = m_effect_transition_timeout ? m_effect_transition_timeout : 1.0f;
-    float rotStart = 0.25f * m_effect_transition_timeout;
+    float const tot      = m_effect_transition_timeout ? m_effect_transition_timeout : 1;
+    float const rotStart = 0.25 * m_effect_transition_timeout;
 
     if (m_effect_frame_time.elapsed() > m_effect_transition_timeout)
     {
@@ -1070,72 +1070,74 @@ void GLSingleView::EffectCube(void)
     glLoadIdentity();
 
 //    float PI = 4.0f * atan(1.0f);
-    float znear = 3.0f;
+    float const znear = 3.0f;
 //     float theta = 2.0f * atan2(2.0f / 2.0f, znear);
 //     theta = theta * 180.0f/PI;
 
-    glFrustum(-1.0f, 1.0f, -1.0f, 1.0f, znear - 0.01f, 10.0f);
+    glFrustum(-1, 1, -1, 1, znear, 10);
 
     if (m_effect_current_frame == 0)
     {
-        m_effect_cube_xrot = 0.0f;
-        m_effect_cube_yrot = 0.0f;
-        m_effect_cube_zrot = 0.0f;
+        m_effect_cube_xrot = 0;
+        m_effect_cube_yrot = 0;
+        m_effect_cube_zrot = 0;
     }
 
     glMatrixMode(GL_MODELVIEW);
     glLoadIdentity();
 
-    float elapsed = (float) m_effect_frame_time.elapsed();
-    float tmp     = ((elapsed <= tot * 0.5) ? elapsed : tot - elapsed);
-    float trans   = 5.0f * tmp / tot;
+    float const elapsed = static_cast<float>(m_effect_frame_time.elapsed());
+    float const tmp     = (elapsed <= tot * 0.5f) ? elapsed : tot - elapsed;
+    float const trans   = 5.0f * tmp / tot;
 
-    glTranslatef(0.0f, 0.0f, -znear - 1.0f - trans);
+    glTranslatef(0, 0, -znear - 1.0f - trans);
 
-    glRotatef(m_effect_cube_xrot, 1.0f, 0.0f, 0.0f);
-    glRotatef(m_effect_cube_yrot, 0.0f, 1.0f, 0.0f);
+    glRotatef(m_effect_cube_xrot, 1, 0, 0);
+    glRotatef(m_effect_cube_yrot, 0, 1, 0);
 
     glBindTexture(GL_TEXTURE_2D, 0);
 
     glBegin(GL_QUADS);
     {
-        glColor4f(0.0f, 0.0f, 0.0f, 1.0f);
+        GLfloat const v = 0.999f; // <1 to avoid conflicts along edges
+
+        glColor4f(0, 0, 0, 1);
 
         /* Front Face */
-        glVertex3f(-1.00f, -1.00f,  0.99f);
-        glVertex3f( 1.00f, -1.00f,  0.99f);
-        glVertex3f( 1.00f,  1.00f,  0.99f);
-        glVertex3f(-1.00f,  1.00f,  0.99f);
+        glVertex3f(-1, -1,  v);
+        glVertex3f( 1, -1,  v);
+        glVertex3f( 1,  1,  v);
+        glVertex3f(-1,  1,  v);
 
         /* Back Face */
-        glVertex3f(-1.00f, -1.00f, -0.99f);
-        glVertex3f(-1.00f,  1.00f, -0.99f);
-        glVertex3f( 1.00f,  1.00f, -0.99f);
-        glVertex3f( 1.00f, -1.00f, -0.99f);
+        glVertex3f(-1, -1, -v);
+        glVertex3f(-1,  1, -v);
+        glVertex3f( 1,  1, -v);
+        glVertex3f( 1, -1, -v);
 
         /* Top Face */
-        glVertex3f(-1.00f,  0.99f, -1.00f);
-        glVertex3f(-1.00f,  0.99f,  1.00f);
-        glVertex3f( 1.00f,  0.99f,  1.00f);
-        glVertex3f( 1.00f,  0.99f, -1.00f);
+        glVertex3f(-1,  v, -1);
+        glVertex3f(-1,  v,  1);
+        glVertex3f( 1,  v,  1);
+        glVertex3f( 1,  v, -1);
 
         /* Bottom Face */
-        glVertex3f(-1.00f, -0.99f, -1.00f);
-        glVertex3f( 1.00f, -0.99f, -1.00f);
-        glVertex3f( 1.00f, -0.99f,  1.00f);
-        glVertex3f(-1.00f, -0.99f,  1.00f);
+        glVertex3f(-1, -v, -1);
+        glVertex3f( 1, -v, -1);
+        glVertex3f( 1, -v,  1);
+        glVertex3f(-1, -v,  1);
 
         /* Right face */
-        glVertex3f(0.99f, -1.00f, -1.00f);
-        glVertex3f(0.99f,  1.00f, -1.00f);
-        glVertex3f(0.99f,  1.00f,  1.00f);
-        glVertex3f(0.99f, -1.00f,  1.00f);
+        glVertex3f(v, -1, -1);
+        glVertex3f(v,  1, -1);
+        glVertex3f(v,  1,  1);
+        glVertex3f(v, -1,  1);
 
         /* Left Face */
-        glVertex3f(-0.99f, -1.00f, -1.00f);
-        glVertex3f(-0.99f, -1.00f,  1.00f);
-        glVertex3f(-0.99f,  1.00f,  1.00f);
-        glVertex3f(-0.99f,  1.00f, -1.00f);
+        glVertex3f(-v, -1, -1);
+        glVertex3f(-v, -1,  1);
+        glVertex3f(-v,  1,  1);
+        glVertex3f(-v,  1, -1);
 
     }
     glEnd();
@@ -1144,57 +1146,57 @@ void GLSingleView::EffectCube(void)
 
     glBegin(GL_QUADS);
     {
-        glColor4d(1.0f, 1.0f, 1.0f, 1.0f);
+        glColor4d(1, 1, 1, 1);
 
         // Front Face
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(-ta.GetTextureX(), -ta.GetTextureY(),  1.00f);
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(+ta.GetTextureX(), -ta.GetTextureY(),  1.00f);
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(+ta.GetTextureX(), +ta.GetTextureY(),  1.00f);
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(-ta.GetTextureX(), +ta.GetTextureY(),  1.00f);
+        glTexCoord2f(0, 0);
+        glVertex3f(-ta.GetTextureX(), -ta.GetTextureY(),  1);
+        glTexCoord2f(1, 0);
+        glVertex3f(+ta.GetTextureX(), -ta.GetTextureY(),  1);
+        glTexCoord2f(1, 1);
+        glVertex3f(+ta.GetTextureX(), +ta.GetTextureY(),  1);
+        glTexCoord2f(0, 1);
+        glVertex3f(-ta.GetTextureX(), +ta.GetTextureY(),  1);
 
         // Top Face
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(-ta.GetTextureX(),  1.00f, -ta.GetTextureY());
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(-ta.GetTextureX(),  1.00f, +ta.GetTextureY());
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(+ta.GetTextureX(),  1.00f, +ta.GetTextureY());
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(+ta.GetTextureX(),  1.00f, -ta.GetTextureY());
+        glTexCoord2f(1, 1);
+        glVertex3f(-ta.GetTextureX(),  1, -ta.GetTextureY());
+        glTexCoord2f(1, 0);
+        glVertex3f(-ta.GetTextureX(),  1, +ta.GetTextureY());
+        glTexCoord2f(0, 0);
+        glVertex3f(+ta.GetTextureX(),  1, +ta.GetTextureY());
+        glTexCoord2f(0, 1);
+        glVertex3f(+ta.GetTextureX(),  1, -ta.GetTextureY());
 
         // Bottom Face
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(-ta.GetTextureX(), -1.00f, -ta.GetTextureY());
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(+ta.GetTextureX(), -1.00f, -ta.GetTextureY());
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(+ta.GetTextureX(), -1.00f, +ta.GetTextureY());
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(-ta.GetTextureX(), -1.00f, +ta.GetTextureY());
+        glTexCoord2f(0, 1);
+        glVertex3f(-ta.GetTextureX(), -1, -ta.GetTextureY());
+        glTexCoord2f(1, 1);
+        glVertex3f(+ta.GetTextureX(), -1, -ta.GetTextureY());
+        glTexCoord2f(1, 0);
+        glVertex3f(+ta.GetTextureX(), -1, +ta.GetTextureY());
+        glTexCoord2f(0, 0);
+        glVertex3f(-ta.GetTextureX(), -1, +ta.GetTextureY());
 
         // Right face
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(1.00f, -ta.GetTextureX(), -ta.GetTextureY());
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(1.00f, -ta.GetTextureX(), +ta.GetTextureY());
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(1.00f, +ta.GetTextureX(), +ta.GetTextureY());
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(1.00f, +ta.GetTextureX(), -ta.GetTextureY());
+        glTexCoord2f(0, 0);
+        glVertex3f(1, -ta.GetTextureX(), -ta.GetTextureY());
+        glTexCoord2f(0, 1);
+        glVertex3f(1, -ta.GetTextureX(), +ta.GetTextureY());
+        glTexCoord2f(1, 1);
+        glVertex3f(1, +ta.GetTextureX(), +ta.GetTextureY());
+        glTexCoord2f(1, 0);
+        glVertex3f(1, +ta.GetTextureX(), -ta.GetTextureY());
 
         // Left Face
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(-1.00f, -ta.GetTextureX(), -ta.GetTextureY());
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(-1.00f, +ta.GetTextureX(), -ta.GetTextureY());
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(-1.00f, +ta.GetTextureX(), +ta.GetTextureY());
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(-1.00f, -ta.GetTextureX(), +ta.GetTextureY());
+        glTexCoord2f(1, 0);
+        glVertex3f(-1, -ta.GetTextureX(), -ta.GetTextureY());
+        glTexCoord2f(0, 0);
+        glVertex3f(-1, +ta.GetTextureX(), -ta.GetTextureY());
+        glTexCoord2f(0, 1);
+        glVertex3f(-1, +ta.GetTextureX(), +ta.GetTextureY());
+        glTexCoord2f(1, 1);
+        glVertex3f(-1, -ta.GetTextureX(), +ta.GetTextureY());
     }
     glEnd();
 
@@ -1202,25 +1204,32 @@ void GLSingleView::EffectCube(void)
 
     glBegin(GL_QUADS);
     {
-        glColor4d(1.0f, 1.0f, 1.0f, 1.0f);
+        glColor4d(1, 1, 1, 1);
 
         // Back Face
-        glTexCoord2f(1.0f, 0.0f);
-        glVertex3f(-tb.GetTextureX(), -tb.GetTextureY(), -1.00f);
-        glTexCoord2f(1.0f, 1.0f);
-        glVertex3f(-tb.GetTextureX(), +tb.GetTextureY(), -1.00f);
-        glTexCoord2f(0.0f, 1.0f);
-        glVertex3f(+tb.GetTextureX(), +tb.GetTextureY(), -1.00f);
-        glTexCoord2f(0.0f, 0.0f);
-        glVertex3f(+tb.GetTextureX(), -tb.GetTextureY(), -1.00f);
+        glTexCoord2f(1, 0);
+        glVertex3f(-tb.GetTextureX(), -tb.GetTextureY(), -1);
+        glTexCoord2f(1, 1);
+        glVertex3f(-tb.GetTextureX(), +tb.GetTextureY(), -1);
+        glTexCoord2f(0, 1);
+        glVertex3f(+tb.GetTextureX(), +tb.GetTextureY(), -1);
+        glTexCoord2f(0, 0);
+        glVertex3f(+tb.GetTextureX(), -tb.GetTextureY(), -1);
     }
     glEnd();
 
-    if ((elapsed >= rotStart) && (elapsed < (tot - rotStart)))
+    if (elapsed < rotStart)
+        ;
+    else if (elapsed < (tot - rotStart))
     {
-        m_effect_cube_xrot = 360.0f * (elapsed - rotStart) / (tot - 2 * rotStart);
+        m_effect_cube_xrot = 360.0f * (elapsed - rotStart) / (tot - 2.0f * rotStart);
         m_effect_cube_yrot = 0.5f * m_effect_cube_xrot;
     }
+    else
+    {
+        m_effect_cube_xrot = 0;
+        m_effect_cube_yrot = 180.0f;
+    }
 
     m_effect_current_frame++;
 }
-- 
1.7.9.5

